apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: kng-01
  namespace: kng-cluster
  annotations:
    harvesterhci.io/vmRunStrategy: RerunOnFailure
    harvesterhci.io/creator: fleet
    harvesterhci.io/os: linux
    harvesterhci.io/maintain-mode-strategy: ShutdownAndRestartAfterEnable
    harvesterhci.io/volumeClaimTemplates: >
      [
        {
          "metadata": {
            "name": "kng-01-disk-0",
            "annotations": {
              "harvesterhci.io/imageId": "default/ubuntu-2403"
            }
          },
          "spec": {
            "accessModes": ["ReadWriteMany"],
            "resources": { "requests": { "storage": "64Gi" } },
            "volumeMode": "Block",
            "storageClassName": "longhorn-ubuntu-2403"
          }
        }
      ]
spec:
  runStrategy: RerunOnFailure
  template:
    metadata:
      labels:
        harvesterhci.io/vmName: kng-01
      annotations:
        harvesterhci.io/sshNames: '["default/george"]'
    spec:
      hostname: kng-01
      domain:
        machine:
          type: q35
        features:
          acpi:
            enabled: true
        cpu:
          sockets: 1
          cores: 2
          threads: 1
        memory:
          guest: 4Gi
        resources:
          requests:
            cpu: 250m
            memory: 2Gi
          limits:
            cpu: "2"
            memory: 4Gi
        devices:
          disks:
            - name: disk-0
              bootOrder: 1
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
            - name: default
              model: virtio
              bridge: {}
      networks:
        - name: default
          multus:
            networkName: default/k8s-network 
      terminationGracePeriodSeconds: 120
      evictionStrategy: LiveMigrateIfPossible
      volumes:
        - name: disk-0
          persistentVolumeClaim:
            claimName: kng-01-disk-0
        - name: cloudinit
          cloudInitNoCloud:
            userDataSecretRef:
              name: cloudinit-common
            networkData: |-
              version: 2
              ethernets:
                eth0:
                  match: { name: "e*" }
                  set-name: eth0
                  dhcp4: false
                  addresses: [10.0.2.50/24]
                  routes:
                    - to: 0.0.0.0/0
                      via: 10.0.2.1
                  nameservers:
                    addresses: [10.0.1.1,1.1.1.1]