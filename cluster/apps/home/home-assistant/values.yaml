persistence:
  enabled: true
  accessMode: ReadWriteMany
  size: 10Gi
  storageClass: longhorn

additionalVolumes:
    - configMap:
        defaultMode: 0755
        name: extra-config
      name: extra-config
additionalMounts:
    - mountPath: /config/extra
      name: extra-config
hostNetwork: true
dnsConfig:
  nameservers:
    - 10.43.0.10
    - 10.0.1.7
  options:
    - name: ndots
      value: "5"
    - name: edns0
ingress:
  enabled: true
  className: nginx
  annotations:
    #nginx.ingress.kubernetes.io/service-upstream: "true"
    cert-manager.io/common-name: home.kng.house
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: home.kng.house
  hosts:
    - host: home.kng.house
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: homeassistant-cert
      hosts:
        - home.kng.house
envFrom:
   - secretRef:
       name: homeassistant-secret
configuration:
  enabled: true
  forceInit: true
  hacs: true
  trusted_proxies:
    - 10.43.0.0/16
    - 10.42.0.0/16
    - 10.0.0.8/24
    - ::1
  templateConfig: |-
      default_config:
      {{- if .Values.ingress.enabled }}
      http:
        use_x_forwarded_for: true
        trusted_proxies:
          {{- range .Values.configuration.trusted_proxies }}
          - {{ . }}
          {{- end }}
      {{- end}}
      frontend:
        themes: !include_dir_merge_named themes
      automation: !include automations.yaml
      script: !include scripts.yaml
      scene: !include scenes.yaml

  initScript: |-
    #!/bin/bash
    set -e
    hacs="{{ .Values.configuration.hacs }}"
    if [ "$hacs" = "true" ]; then
      wget -O install.sh https://get.hacs.xyz
      chmod +x install.sh
      sh install.sh
    fi
    # Check if the configuration file exists
    if [ ! -f /config/configuration.yaml ]; then
      echo "Configuration file not found, creating a new one"
      cp /config-templates/configuration.yaml /config/configuration.yaml
    fi

    # Check if the force init is enabled
    forceInit="{{ .Values.configuration.forceInit }}"
    if [ "$forceInit" = "true" ]; then
      echo "Force init is enabled, overwriting the configuration file"
      current_time=$(date +%Y%m%d_%H%M%S)
      echo "Backup the current configuration file to configuration.yaml.$current_time"
      cp /config/configuration.yaml /config/configuration.yaml.$current_time
      echo "The current configuration file will be merged with the default configuration file with this content:"
      cat /config-templates/configuration.yaml
      if [[ ! -s /config/configuration.yaml ]]; then
        # If /config/configuration.yaml is empty, use the content of /config-templates/configuration.yaml
        cat /config-templates/configuration.yaml > /config/configuration.yaml
      else
        # Perform the merge operation if /config/configuration.yaml is not empty
        yq eval-all --inplace 'select(fileIndex == 0) *d select(fileIndex == 1)' /config/configuration.yaml /config-templates/configuration.yaml
      fi
    fi

    # Check if the automations file exists
    if [ ! -f /config/automations.yaml ]; then
      echo "Automations file not found, creating a new one"
      touch /config/automations.yaml
      echo "[]" >> /config/automations.yaml
    fi

    # Check if the scripts file exists
    if [ ! -f /config/scripts.yaml ]; then
      echo "Scripts file not found, creating a new one"
      touch /config/scripts.yaml
    fi

    # Check if the scenes file exists
    if [ ! -f /config/scenes.yaml ]; then
      echo "Scenes file not found, creating a new one"
      touch /config/scenes.yaml
    fi
addons:
  codeserver:
    enabled: true
    ingress:
      enabled: true
      className: nginx
      annotations:
        #nginx.ingress.kubernetes.io/service-upstream: "true"
        cert-manager.io/common-name: home-code.kng.house
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/hostname: home-code.kng.house
      hosts:
        - host: home-code.kng.house
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: home-code-cert
          hosts:
            - home-code.kng.house
#wget -O - https://get.hacs.xyz | bash -