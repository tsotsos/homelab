---
apiVersion: v1
kind: Service
metadata:
  name: zigbee2mqtt
  namespace: home
  labels:
    app.kubernetes.io/name: zigbee2mqtt
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: zigbee2mqtt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zigbee2mqtt-data
  namespace: home
spec:
  storageClassName: longhorn
  resources:
      requests:
        storage: 10Gi
  accessModes:
  - ReadWriteMany
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zigbee2mqtt
  labels:
    app.kubernetes.io/name: zigbee2mqtt
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zigbee2mqtt
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zigbee2mqtt
    spec:
      initContainers:
      - name: config-merger
        image: mikefarah/yq:4
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: data
            mountPath: /data
          - name: config
            mountPath: /app/zigbee2mqtt/data/configuration.yaml
            subPath: configuration.yaml
        command:
          - sh
          - -c
          - |
            #!/bin/sh
            existing_config=$(cat /data/configuration.yaml)
            new_config=$(cat /app/zigbee2mqtt/data/configuration.yaml)
            # Extract values to keep from existing_config
            pan_id=$(yq eval '.pan_id' <(echo "$existing_config"))
            network_key=$(yq eval '.network_key' <(echo "$existing_config"))
            channel=$(yq eval '.channel' <(echo "$existing_config"))
            # Remove the values from existing_config, so they won't override new_config
            existing_config=$(yq eval 'del(.pan_id, .network_key, .channel)' <(echo "$existing_config"))
            # Merge configurations (now without the specified keys in existing_config)
            merged_config_without_keys=$(yq eval-all '. as $item ireduce ({}; . * $item )' \
                                        <(echo "$existing_config") <(echo "$new_config"))
            # Add back the values from existing_config
            merged_config=$(yq eval '.pan_id = strenv(pan_id) | .network_key = strenv(network_key) | .channel = strenv(channel)' \
                            <(echo "$merged_config_without_keys"))
            # Write the final merged configuration to /data
            echo "$merged_config" > /data/configuration.yaml

      containers:
      - image: ghcr.io/koenkk/zigbee2mqtt
        name: zigbee2mqtt
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        env:
        - name: ZIGBEE2MQTT_CONFIG_MQTT_SERVER
          value: "mqtt://mosquitto.home.svc.cluster.local"
        - name: ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC
          value: "zigbee2mqtt"
        - name: ZIGBEE2MQTT_CONFIG_PERMIT_JOIN
          value: "true"
        - name: ZIGBEE2MQTT_CONFIG_HOMEASSISTANT
          value: "true"
        - name: ZIGBEE2MQTT_DATA
          value: "/data"
        - name: ZIGBEE2MQTT_CONFIG_ADVANCED_NETWORK_KEY
          value: "GENERATE"
        - name: ZIGBEE2MQTT_CONFIG_SERIAL_PORT
          value: "ZIGBEE_IP"
        - name: TZ
          value: "Europe/Athens"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config
          mountPath: /app/zigbee2mqtt/data/configuration.yaml
          subPath: configuration.yaml
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: zigbee2mqtt-data
      - name: config
        configMap:
          defaultMode: 0755
          name: z2m-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zigbee2mqtt
  namespace: home
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: z2m.kng.house
    nginx.ingress.kubernetes.io/auth-url: |-
      http://ak-outpost-generic-sso.kube-system.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
      https://auth.kng.house/outpost.goauthentik.io/start?rd=$scheme://$http_host$request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
spec:
  ingressClassName: nginx
  rules:
    - host: z2m.kng.house
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: zigbee2mqtt
                port:
                  number: 8080
  tls:
    - hosts:
        - z2m.kng.house
      secretName: z2m-tls