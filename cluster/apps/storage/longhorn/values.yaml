preUpgradeChecker:
  jobEnabled: false

# Backup S3 backend URL
# backup:
#   minioUrl: "https://s3.ricsanfre.com:9091"

# Prometheus servicemonitor configuration
# serviceMonitor:
#   enable: true
#   release: monitoring

# defaultSettings:
#   backupTarget: "s3://k3s-longhorn@eu-west-1/"
#   backupTargetCredentialSecret: longhorn-backup-secret
# # Ingress Resource. Longhorn dashboard.
defaultSettings:
  orphanAutoDeletion: false
  autoDeletePodWhenVolumeDetachedUnexpectedly: true
  nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
  nodeDrainPolicy: always-allow
ingress:
  ## Enable creation of ingress resource
  enabled: true
  ## Add ingressClassName to the Ingress
  ingressClassName: nginx
  
  # ingress host
  host: longhorn.kng.house
  tls: true
  tlsSecret: longhorn-tls
  path: /
  annotations:
    #nginx.ingress.kubernetes.io/service-upstream: "true"
    cert-manager.io/common-name: longhorn.kng.house
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: longhorn.kng.house
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.kube-system.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: https://longhorn.kng.house/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;